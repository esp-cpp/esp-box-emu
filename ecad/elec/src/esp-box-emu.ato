from "generics/resistors.ato" import Resistor, I2CPullup
from "generics/capacitors.ato" import Capacitor
from "generics/diodes.ato" import Diode
from "generics/inductors.ato" import Inductor
from "generics/leds.ato" import LED
from "generics/vdivs.ato" import VDiv
from "generics/buttons.ato" import ButtonPullup, ButtonPulldown

from "usb-connectors/usb-connectors.ato" import USBCConn

from "generics/interfaces.ato" import Power, I2C

from "SZYY0805R.ato" import SZYY0805
from "aw9523btqr.ato" import Aw9523
from "drv2605yzfr.ato" import Drv2605
from "tps63020dsjr/elec/src/tps63020dsjr.ato" import TPS63020DSJR
from "max17048g+t10.ato" import MAX17048G_T10
from "MBR0520LT1G.ato" import MBR0520LT1G
from "MCP73831T-2ACI_OT.ato" import MCP73831T_2ACI_OT

# uSD card
from "HYCW118-TF09-200B.ato" import HYCW118_TF09_200B

# usb-c connector
from "TYPE-611-T3-W.ato" import TYPE_611_T3_W

# unknown
from "MTP125-1206S1.ato" import MTP125_1206S1


from "gbc_dpad.ato" import GbcDpad
from "gbc_a_b.ato" import GbcABXYButtons
from "gbc_start_select.ato" import GbcStartSelectButtons

from "volume_button.ato" import VolumeButton

module EspBoxEmu:
    power_3v3 = new Power
    power_5v = new Power
    power_bat = new Power
    power_usb = new Power

    # common ground for all power rails
    signal gnd ~ power_3v3.gnd
    gnd ~ power_5v.gnd
    gnd ~ power_bat.gnd
    gnd ~ power_usb.gnd

    # USB-C connector
    usb_c = new USBCConn
    usb_c.conn -> TYPE_611_T3_W
    power_usb ~ usb_c.power

    # i2c bus
    i2c = new I2C
    i2c_pullup = new I2CPullup
    i2c_pullup.i2c ~ i2c
    i2c_pullup.footprint = "R0402"
    i2c_pullup.value = 10kohm +/- 10%

    # io expander
    io = new Aw9523
    io.power ~ power_3v3
    io.i2c ~ i2c

    # unknown
    mtp = new MTP125_1206S1


    # 5V power supply
    # tps63020 = new TPS63020DSJR
    # tps63020.v_in = 3.6V to 4.2V
    # tps63020.v_out = 5V +/- 5%
    # tps63020.i_q = 20uA
    # tps63020.power_in ~ power_bat
    # tps63020.power_out ~ power_5v

    # battery voltage measurement, through a divider
    signal bat_vcc ~ power_bat.vcc
    power_bat.gnd ~ gnd
    # battery_vdiv = new VDiv
    # battery_vdiv.v_in = 3.6V to 4.2V
    # battery_vdiv.v_out = 0V to 3.3V
    # battery_vdiv.r_total = 100kohm
    # battery_vdiv.top = bat_vcc
    # battery_vdiv.bottom = gnd
    # signal battery_measurement ~ battery_vdiv.out

    # battery charger
    mcp73831 = new MCP73831T_2ACI_OT
    mcp73831.VDD ~ power_5v.vcc
    mcp73831.VSS ~ gnd
    mcp73831.VBAT ~ bat_vcc
    mcp73831.PROG ~ gnd

    # battery state of charge measurement
    max17048 = new MAX17048G_T10
    max17048.VDD ~ bat_vcc
    max17048.GND ~ gnd
    max17048.SDA ~ i2c.sda
    max17048.SCL ~ i2c.scl
    max17048.ALRT_ ~ io.P1_4
    max17048.CELL ~ bat_vcc

    # micro-SD card
    uSD = new HYCW118_TF09_200B

    # haptics
    drv2605 = new Drv2605
    drv2605.power ~ power_3v3
    drv2605.i2c ~ i2c

    # D-pad
    dpad = new GbcDpad
    dpad.power ~ power_3v3
    dpad.up ~ io.P0_0
    dpad.down ~ io.P0_1
    dpad.left ~ io.P0_2
    dpad.right ~ io.P0_3

    # A, B, X, Y buttons
    buttons_abxy = new GbcABXYButtons
    buttons_abxy.power ~ power_3v3
    buttons_abxy.a ~ io.P0_4
    buttons_abxy.b ~ io.P0_5
    buttons_abxy.x ~ io.P0_6
    buttons_abxy.y ~ io.P0_7

    # start / select buttons
    start_select = new GbcStartSelectButtons
    start_select.power ~ power_3v3
    start_select.start ~ io.P1_0
    start_select.select ~ io.P1_1

    # volume up / down buttons
    vol_up = new VolumeButton
    vol_up.power ~ power_3v3
    vol_up.out ~ io.P1_2
    vol_down = new VolumeButton
    vol_down.power ~ power_3v3
    vol_down.out ~ io.P1_3
